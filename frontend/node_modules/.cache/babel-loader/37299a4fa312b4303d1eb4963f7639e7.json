{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { roomListReducer, roomDetailsReducer, roomDeleteReducer, roomCreateReducer, roomUpdateReducer, roomReviewCreateReducer } from './reducers/roomReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderBookReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  roomList: roomListReducer,\n  roomDetails: roomDetailsReducer,\n  roomDelete: roomDeleteReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomReviewCreate: roomReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderBook: orderBookReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst infoClientFromStorage = localStorage.getItem('infoClient') ? JSON.parse(localStorage.getItem('infoClient')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    infoClient: infoClientFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Mohamed Attia/Desktop/SILVER MOON/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","roomListReducer","roomDetailsReducer","roomDeleteReducer","roomCreateReducer","roomUpdateReducer","roomReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderBookReducer","orderListMyReducer","orderListReducer","reducer","roomList","roomDetails","roomDelete","roomCreate","roomUpdate","roomReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderBook","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","infoClientFromStorage","initialState","cartItems","infoClient","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,uBANF,QAOO,yBAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,QAAQ,EAAErB,eADoB;AAE9BsB,EAAAA,WAAW,EAAErB,kBAFiB;AAG9BsB,EAAAA,UAAU,EAAErB,iBAHkB;AAI9BsB,EAAAA,UAAU,EAAErB,iBAJkB;AAK9BsB,EAAAA,UAAU,EAAErB,iBALkB;AAM9BsB,EAAAA,gBAAgB,EAAErB,uBANY;AAO9BsB,EAAAA,IAAI,EAAErB,WAPwB;AAQ9BsB,EAAAA,SAAS,EAAErB,gBARmB;AAS9BsB,EAAAA,YAAY,EAAErB,mBATgB;AAU9BsB,EAAAA,WAAW,EAAErB,kBAViB;AAW9BsB,EAAAA,iBAAiB,EAAErB,wBAXW;AAY9BsB,EAAAA,QAAQ,EAAErB,eAZoB;AAa9BsB,EAAAA,UAAU,EAAErB,iBAbkB;AAc9BsB,EAAAA,UAAU,EAAErB,iBAdkB;AAe9BsB,EAAAA,WAAW,EAAErB,kBAfiB;AAgB9BsB,EAAAA,YAAY,EAAErB,mBAhBgB;AAiB9BsB,EAAAA,QAAQ,EAAErB,eAjBoB;AAkB9BsB,EAAAA,SAAS,EAAErB,gBAlBmB;AAmB9BsB,EAAAA,WAAW,EAAErB,kBAnBiB;AAoB9BsB,EAAAA,SAAS,EAAErB;AApBmB,CAAD,CAA/B;AAuBA,MAAMsB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,qBAAqB,GAAGL,YAAY,CAACC,OAAb,CAAqB,YAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAD0B,GAE1B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,UAAU,EAAEH;AAFR,GADa;AAKnBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AAEA,MAAMuD,KAAK,GAAG1D,WAAW,CACvByB,OADuB,EAEvB4B,YAFuB,EAGvBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  roomListReducer,\n  roomDetailsReducer,\n  roomDeleteReducer,\n  roomCreateReducer,\n  roomUpdateReducer,\n  roomReviewCreateReducer,\n} from './reducers/roomReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderBookReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  roomList: roomListReducer,\n  roomDetails: roomDetailsReducer,\n  roomDelete: roomDeleteReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomReviewCreate: roomReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderBook: orderBookReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst infoClientFromStorage = localStorage.getItem('infoClient')\n  ? JSON.parse(localStorage.getItem('infoClient'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    infoClient: infoClientFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}